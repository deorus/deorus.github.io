<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: data | Alex Rodrigues]]></title>
  <link href="http://deorus.github.io/blog/categories/data/atom.xml" rel="self"/>
  <link href="http://deorus.github.io/"/>
  <updated>2015-03-05T09:13:58+00:00</updated>
  <id>http://deorus.github.io/</id>
  <author>
    <name><![CDATA[Alex Rodrigues]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Probe your system with synthesized realistic data]]></title>
    <link href="http://deorus.github.io/blog/2015/02/28/probe-your-system-with-synthesized-realistic-data/"/>
    <updated>2015-02-28T07:05:00+00:00</updated>
    <id>http://deorus.github.io/blog/2015/02/28/probe-your-system-with-synthesized-realistic-data</id>
    <content type="html"><![CDATA[<p>I wonder how ancient civilizations, that have built incredible structures, knew that once built they would remain steady. I&rsquo;m not talking about mysterious pyramids but more recent landmarks left us by romans such as roman aqueducts. How sure were they on the resiliency to nature powers, strong winds and tough winters? Well&hellip; the answer seems to be easy: with lots of theoretic work, designs and calculations.</p>

<p>While this is true, things were also achieved with lots of experimentation, both on the structural side and on materials applications. That knowledge was vital to have good practices on what to use in each situation and predict maintenance and consequences in extreme conditions. The same applies to the conception of fault-tolerant reliable systems to process large volumes of data.</p>

<p>Normal approaches start with mere reasonable assumptions on data volume, ingestion rate, document size, but others are hard to predict such as processing time, indexing time, etc. It really helps to know how components behave under pressure and calculate what are the limits of the current design.</p>

<p>Many (self-entitled) architects like to take the designing process as cooking a big blend of hype-based technologies and it&rsquo;s very easy to get burnt. Key factors such as SLAs, peak times and hardware limitations greatly affect which components you choose to put in the pan and how would you mix them together.</p>

<p>The only way to know how certain software components behave, they have to be exercised with a great volume of data, similar to the one they will process once in production. Data that can be just fed from the productions servers if it exists and if the infrastructure allows. More often than not, the data is not yet available in the target formats and there&rsquo;s the necessity of trying out with generated data in the chosen formats.</p>

<!-- more -->


<p>Whenever I want to test and benchmark the systems I&rsquo;m working on, I use a synthetic data generator called log-synth. Log synth is one of those swiss-army knives for data generation. It has plenty of generators, based on parametric statistical methods. The good part is that it&rsquo;s open-source and can be easily extended with new generating algorithms and output formats.</p>

<p>The most common output formats are JSON and CSV.</p>

<p>Recently I&rsquo;ve <a href="https://github.com/deorus/log-synth/commit/1a01813f038f0ec11660f46589a02ed8951249f9">added</a> a template based generator that extends the range of available output formats. It leverages the data generation algorithms that ship with it and feeds that into a templated document using <a href="http://freemarker.org/">Freemarker</a> templating language.</p>

<p>To generate a sample vCard simply create a file <code>template.txt</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>template.txt – template for a vCard document. </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>BEGIN:VCARD
</span><span class='line'>VERSION:3.0
</span><span class='line'>N:${last_name.asText()};${first_name.asText()};;${title.asText()}
</span><span class='line'>ORG:Sample Org
</span><span class='line'>TITLE:${title.asText()}
</span><span class='line'>PHOTO;VALUE=URL;TYPE=GIF:&lt;a href=&quot;http://thumbs.example.com/$&quot;&gt;http://thumbs.example.com/$&lt;/a&gt;{filename.asText()}/${first_name.asText()?lower_case  }.gif
</span><span class='line'>TEL;TYPE=HOME,VOICE:${phone_number.asText()}
</span><span class='line'>ADR;TYPE=WORK:;;${address.asText()?split(&amp;ldquo; &amp;rdquo;)?join(&amp;ldquo;;&amp;rdquo;)}
</span><span class='line'>EMAIL;TYPE=PREF,INTERNET:${first_name.asText()[0]?lower_case}${last_name.asText()?lower_case}@example.com
</span><span class='line'>REV:${first_visit.asText()}
</span><span class='line'>END:VCARD
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then a schema file, let&rsquo;s call it <code>schema.txt</code>:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>schema.txt – schema for vCard document fields. </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">[</span><span class="err">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;pre&gt;&lt;code&gt;</span><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;string&quot;</span><span class="p">,</span> <span class="nt">&quot;dist&quot;</span><span class="p">:{</span><span class="nt">&quot;Mr&quot;</span><span class="p">:</span><span class="mf">0.5</span><span class="p">,</span> <span class="nt">&quot;Mrs.&quot;</span><span class="p">:</span><span class="mf">0.14</span><span class="p">,</span> <span class="nt">&quot;Miss&quot;</span><span class="p">:</span><span class="mf">0.36</span><span class="p">}},</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;first_name&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;first&quot;</span><span class="p">},</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;last_name&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;name&quot;</span><span class="p">,</span> <span class="nt">&quot;type&quot;</span><span class="p">:</span><span class="s2">&quot;last&quot;</span><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;filename&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span> <span class="s2">&quot;join&quot;</span><span class="p">,</span> <span class="nt">&quot;separator&quot;</span><span class="p">:</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="nt">&quot;value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;sequence&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;length&quot;</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;array&quot;</span><span class="p">:[</span>
</span><span class='line'>            <span class="p">{</span><span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;string&quot;</span><span class="p">,</span> <span class="nt">&quot;dist&quot;</span><span class="p">:{</span><span class="nt">&quot;small&quot;</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span> <span class="nt">&quot;medium&quot;</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span> <span class="nt">&quot;large&quot;</span><span class="p">:</span><span class="mi">2</span><span class="p">}},</span>
</span><span class='line'>            <span class="p">{</span><span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;string&quot;</span><span class="p">,</span> <span class="nt">&quot;dist&quot;</span><span class="p">:{</span><span class="nt">&quot;high&quot;</span><span class="p">:</span><span class="mi">10</span><span class="p">,</span> <span class="nt">&quot;low&quot;</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span> <span class="nt">&quot;mobile&quot;</span><span class="p">:</span><span class="mi">15</span><span class="p">}}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;phone_number&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span> <span class="s2">&quot;join&quot;</span><span class="p">,</span> <span class="nt">&quot;separator&quot;</span><span class="p">:</span> <span class="s2">&quot;-&quot;</span><span class="p">,</span> <span class="nt">&quot;value&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;sequence&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;length&quot;</span><span class="p">:</span><span class="mi">3</span><span class="p">,</span>
</span><span class='line'>        <span class="nt">&quot;array&quot;</span><span class="p">:[</span>
</span><span class='line'>            <span class="p">{</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span> <span class="s2">&quot;int&quot;</span><span class="p">,</span> <span class="nt">&quot;min&quot;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nt">&quot;max&quot;</span><span class="p">:</span> <span class="mi">999</span><span class="p">},</span>
</span><span class='line'>            <span class="p">{</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span> <span class="s2">&quot;int&quot;</span><span class="p">,</span> <span class="nt">&quot;min&quot;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nt">&quot;max&quot;</span><span class="p">:</span> <span class="mi">999</span><span class="p">},</span>
</span><span class='line'>            <span class="p">{</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span> <span class="s2">&quot;int&quot;</span><span class="p">,</span> <span class="nt">&quot;min&quot;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="nt">&quot;max&quot;</span><span class="p">:</span> <span class="mi">999</span><span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">},</span>
</span><span class='line'>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;address&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;address&quot;</span><span class="p">},</span>
</span><span class='line'><span class="p">{</span><span class="nt">&quot;name&quot;</span><span class="p">:</span><span class="s2">&quot;first_visit&quot;</span><span class="p">,</span> <span class="nt">&quot;class&quot;</span><span class="p">:</span><span class="s2">&quot;date&quot;</span><span class="p">,</span> <span class="nt">&quot;format&quot;</span><span class="p">:</span><span class="s2">&quot;yyyy-MM-dd HH:mm:ssZ&quot;</span><span class="p">}</span>
</span><span class='line'><span class="err">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;p&gt;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To invoke the log-synth, just do:</p>

<blockquote><p>java -cp .:./target/log-synth-0.1-SNAPSHOT-jar-with-dependencies.jar com.mapr.synth.Synth -count 5000 -schema schema.txt -template template.txt -format TEMPLATE -output output/</p></blockquote>

<p>The output documents will end up in the output/ folder as expected and they will look like:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Sample generated vCard document. </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>BEGIN:VCARD
</span><span class='line'>VERSION:3.0
</span><span class='line'>N:Kittle;Gwendolyn;;Mr
</span><span class='line'>ORG:Sample Org
</span><span class='line'>TITLE:Mr
</span><span class='line'>PHOTO;VALUE=URL;TYPE=GIF:&lt;a href=&quot;http://thumbs.example.com/small/mobile/gwendolyn.gif&quot;&gt;http://thumbs.example.com/small/mobile/gwendolyn.gif&lt;/a&gt;
</span><span class='line'>TEL;TYPE=HOME,VOICE:774-383-580
</span><span class='line'>ADR;TYPE=WORK:;;18033;Quaking;Brook;Avenue
</span><span class='line'>EMAIL;TYPE=PREF,INTERNET:&lt;a href=&quot;&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#103;&amp;#107;&amp;#105;&amp;#116;&amp;#x74;&amp;#108;&amp;#101;&amp;#64;&amp;#101;&amp;#120;&amp;#97;&amp;#x6d;&amp;#112;&amp;#x6c;&amp;#101;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&quot;&gt;&amp;#x67;&amp;#107;&amp;#x69;&amp;#116;&amp;#116;&amp;#108;&amp;#x65;&amp;#64;&amp;#x65;&amp;#120;&amp;#97;&amp;#x6d;&amp;#112;&amp;#108;&amp;#x65;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#109;&lt;/a&gt;
</span><span class='line'>REV:2013-07-14 01:37:08+0100
</span><span class='line'>END:VCARDBEGIN:VCARD
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I invite you to explore this very handy tool on <a href="https://github.com/tdunning/log-synth/">Github</a>.</p>
]]></content>
  </entry>
  
</feed>
